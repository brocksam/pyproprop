# Adapted from https://github.com/ogrisel/python-appveyor-demo

environment:

  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\appveyor\\run_with_env.cmd"

  matrix:
    - PYTHON: "C:\\Miniconda36-x64"
      PYTHON_VERSION: "3.6"
      PYTHON_ARCH: "64"
      CONDA_PY: "36"

    - PYTHON: "C:\\Miniconda37-x64"
      PYTHON_VERSION: "3.7"
      PYTHON_ARCH: "64"
      CONDA_PY: "37"

    - PYTHON: "C:\\Miniconda38-x64"
      PYTHON_VERSION: "3.8"
      PYTHON_ARCH: "64"
      CONDA_PY: "38"

install:
  # If there is a newer build queued for the same PR, cancel this one.
  # The AppVeyor 'rollout builds' option is supposed to serve the same
  # purpose but it is problematic because it tends to cancel builds pushed
  # directly to master instead of just PR builds (or the converse).
  # credits: JuliaLang developers.
  - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `
        https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `
        Where-Object pullRequestId -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `
          throw "There are newer queued builds for this pull request, failing early." }

  - ECHO "Filesystem root:"
  - ps: "ls \"C:/\""

  - ECHO "Installed SDKs:"
  - ps: "ls \"C:/Program Files/Microsoft SDKs/Windows\""

  # Install the appropriate Miniconda, PIP, conda-build
  - powershell .\\continuous-integration\\appveyor\\install.ps1

  # This upates conda and installs the necessary packages.
  - "%CMD_IN_ENV% clean --yes --all"
  - "%CMD_IN_ENV% update --yes conda"
  - "%CMD_IN_ENV% update --yes --all"
  - "%CMD_IN_ENV% config --prepend channels conda-forge"
  - "%CMD_IN_ENV% install --yes python=%PYTHON_VERSION%"
  - "%CMD_IN_ENV% install --yes --file=requirements.txt"
  - "%CMD_IN_ENV% install --yes --file=docs/requirements.txt"
  - "%CMD_IN_ENV% update -y --all"
  - "%CMD_IN_ENV% info"
  - "%CMD_IN_ENV% list"

  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart the
  # parent CMD process).
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""

build_script:
  # Build the compiled extension
  - "%CMD_IN_ENV% python setup.py build"

test_script:
  - "%CMD_IN_ENV% python setup.py install"
  - "%CMD_IN_ENV% conda.exe install --yes --file=tests/requirements.txt"
  - "%CMD_IN_ENV% pytest"
      
after_test:
  # If tests are successful, create binary packages for the project.
  - "%CMD_IN_ENV% python setup.py bdist_wheel"
  - "%CMD_IN_ENV% python setup.py bdist_wininst"
  - "%CMD_IN_ENV% python setup.py bdist_msi"
  - ps: "ls dist"

artifacts:
  # Archive the generated packages in the ci.appveyor.com build report.
  - path: dist\*
